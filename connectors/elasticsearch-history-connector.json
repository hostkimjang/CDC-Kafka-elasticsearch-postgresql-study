{
  "name": "elasticsearch-history-connector",
  "config": {
    "connector.class": "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",
    "connection.url": "http://elasticsearch:9200",

    "topics": "ex_platform.public.ex_platform_novel",

    "key.ignore": "true",
    "schema.ignore": "true",
    "flush.synchronously": "true",

    "key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "key.converter.schemas.enable": "false",
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter.schemas.enable": "false",

    "transforms": "unwrap,extractAfter,addTS,route",

    "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
    "transforms.unwrap.drop.tombstones": "true",
    "transforms.unwrap.delete.handling.mode": "drop",

    "transforms.extractAfter.type": "org.apache.kafka.connect.transforms.ExtractField$Value",
    "transforms.extractAfter.field": "after",

    "transforms.addTS.type": "org.apache.kafka.connect.transforms.InsertField$Value",
    "transforms.addTS.timestamp.field": "history_timestamp",

    "transforms.route.type": "org.apache.kafka.connect.transforms.TimestampRouter",
    "transforms.route.topic.format": "ex_platform_novel_history_${timestamp}",
    "transforms.route.timestamp.format": "yyyy-MM-dd-HH-mm",

    "behavior.on.malformed.documents": "warn",
    "behavior.on.null.values": "ignore",

    "errors.tolerance": "all",
    "errors.log.enable": "true",
    "errors.log.include.messages": "true",

    "batch.size": "100",
    "max.in.flight.requests": "1",
    "flush.timeout.ms": "10000",
    "max.retries": "10",
    "retry.backoff.ms": "1000"
  }
}
