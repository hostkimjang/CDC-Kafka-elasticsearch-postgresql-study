{
  "name": "elasticsearch-ex-platform-connector",
  "config": {
    "connector.class": "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",
    "connection.url": "http://elasticsearch:9200",
    "index.name": "ex_platform_novel",
    "topics": "ex_platform.public.ex_platform_novel",
    "flush.synchronously": "true",

    "key.ignore": false,
    "schema.ignore": true,
    "behavior.on.null.values": "delete",

    "key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "key.converter.schemas.enable": "false",
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter.schemas.enable": "false",

    "transforms": "unwrap,extractValue,extractKeyField,route",

    "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
    "transforms.unwrap.drop.tombstones": "false",

    "transforms.extractValue.type": "org.apache.kafka.connect.transforms.ExtractField$Value",
    "transforms.extractValue.field": "after",

    "transforms.extractKeyField.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
    "transforms.extractKeyField.field": "id",

    "transforms.route.type": "org.apache.kafka.connect.transforms.RegexRouter",
    "transforms.route.regex": ".*",
    "transforms.route.replacement": "ex_platform_novel",

    "errors.tolerance": "all",
    "errors.log.enable": "true",
    "errors.log.include.messages": "true",

    "batch.size": 100,
    "max.in.flight.requests": 1,
    "flush.timeout.ms": 10000,
    "max.retries": 10,
    "retry.backoff.ms": 1000
  }
}
